# Generated by Django 3.0.6 on 2020-05-23 14:16

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EU4Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tag', models.CharField(db_index=True, max_length=3)),
                ('tier', models.IntegerField(choices=[(0, 'Unplayable'), (1, 'Diamond'), (2, 'Gold'), (3, 'Silver'), (4, 'Bronze')], default=0)),
                ('exists_in_1444', models.BooleanField(default=True)),
                ('is_formable', models.BooleanField(default=False)),
                ('is_releasable', models.BooleanField(default=False)),
                ('is_revolter', models.BooleanField(default=False)),
                ('is_colonial_nation', models.BooleanField(default=False)),
                ('is_special_country', models.BooleanField(default=False, help_text='Spawned with console or from CK converter.')),
                ('appears_by_event', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'country',
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='EU4Match',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'match',
                'verbose_name_plural': 'match',
            },
        ),
        migrations.CreateModel(
            name='EU4Tournament',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('short_name', models.CharField(blank=True, max_length=5)),
            ],
            options={
                'verbose_name': 'tournament',
                'verbose_name_plural': 'tournaments',
            },
        ),
        migrations.CreateModel(
            name='EU4TournamentContender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_tier', models.IntegerField(choices=[(1, 'Diamond'), (2, 'Gold'), (3, 'Silver'), (4, 'Bronze')], verbose_name='Preferred tier')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tournaments', to='eu4.EU4Country')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.PlayerProfile')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='eu4.EU4Tournament')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='eu4tournament',
            name='contenders',
            field=models.ManyToManyField(related_name='eu4_tournaments', through='eu4.EU4TournamentContender', to='base.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='eu4tournament',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='eu4tournament',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Game'),
        ),
        migrations.CreateModel(
            name='EU4MatchContender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches', to='eu4.EU4Country')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eu4.EU4Match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.PlayerProfile')),
                ('subbing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subs', to='base.PlayerProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='eu4match',
            name='contenders',
            field=models.ManyToManyField(related_name='eu4_matches', through='eu4.EU4MatchContender', to='base.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='eu4match',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.PlayerProfile'),
        ),
        migrations.AddField(
            model_name='eu4match',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Game'),
        ),
        migrations.AddField(
            model_name='eu4match',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='eu4.EU4Tournament'),
        ),
    ]
